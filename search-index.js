var searchIndex = {};
searchIndex["cargo"] = {"doc":"","items":[[3,"CommitInfo","cargo","",null,null],[12,"short_commit_hash","","",0,null],[12,"commit_hash","","",0,null],[12,"commit_date","","",0,null],[3,"CfgInfo","","",null,null],[12,"commit_info","","",1,null],[12,"release_channel","","",1,null],[3,"VersionInfo","","",null,null],[12,"major","","",2,null],[12,"minor","","",2,null],[12,"patch","","",2,null],[12,"pre_release","","",2,null],[12,"cfg_info","","",2,null],[5,"call_main_without_stdin","","",null,null],[5,"print_json","","",null,{"inputs":[{"name":"t"}],"output":null}],[5,"exit_with_error","","",null,null],[5,"handle_error","","",null,{"inputs":[{"name":"cargoerror"},{"name":"shell"}],"output":null}],[5,"version","","",null,{"inputs":[],"output":{"name":"versioninfo"}}],[0,"core","","",null,null],[3,"Features","cargo::core","",null,null],[3,"Feature","","",null,null],[3,"CliUnstable","","A parsed represetnation of all unstable flags that Cargo accepts.",null,null],[12,"print_im_a_teapot","","",3,null],[3,"PackageIdSpec","","",null,null],[3,"Members","","An iterator over the member packages of a workspace, returned by `Workspace::members`",null,null],[3,"Workspace","","The core abstraction in Cargo for working with a workspace of crates.",null,null],[4,"WorkspaceConfig","","Configuration of a workspace in a manifest.",null,null],[13,"Root","","Indicates that `[workspace]` was present and the members were optionally specified as well.",4,null],[12,"members","cargo::core::WorkspaceConfig","",4,null],[12,"exclude","","",4,null],[13,"Member","cargo::core","Indicates that `[workspace]` was present and the `root` field is the optional value of `package.workspace`, if present.",4,null],[12,"root","cargo::core::WorkspaceConfig","",4,null],[0,"source","cargo::core","",null,null],[3,"SourceId","cargo::core::source","Unique identifier for a source of packages.",null,null],[3,"SourceIdToUrl","","",null,null],[3,"PrettyRef","","",null,null],[3,"SourceMap","","",null,null],[3,"SourcesMut","","",null,null],[4,"GitReference","","",null,null],[13,"Tag","","",5,null],[13,"Branch","","",5,null],[13,"Rev","","",5,null],[6,"Sources","","",null,null],[8,"Source","","A Source finds and downloads remote packages based on names and versions.",null,null],[10,"source_id","","",6,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[10,"update","","The update method performs any network operations required to get the entire list of all names, versions and dependencies of packages managed by the Source.",6,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[10,"download","","The download method fetches the full package for each name and version specified.",6,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[10,"fingerprint","","Generates a unique string which represents the fingerprint of the current state of the source.",6,{"inputs":[{"name":"self"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"verify","","If this source supports it, verifies the source of the package specified.",6,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"gitreference"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"gitreference"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"gitreference"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"gitreference"}],"output":{"name":"ordering"}}],[11,"hash","","",5,null],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_url","","Parses a source URL and returns the corresponding ID.",7,{"inputs":[{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"to_url","","",7,{"inputs":[{"name":"self"}],"output":{"name":"sourceidtourl"}}],[11,"for_path","","",7,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"for_git","","",7,{"inputs":[{"name":"url"},{"name":"gitreference"}],"output":{"name":"cargoresult"}}],[11,"for_registry","","",7,{"inputs":[{"name":"url"}],"output":{"name":"cargoresult"}}],[11,"for_local_registry","","",7,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"for_directory","","",7,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"crates_io","","Returns the `SourceId` corresponding to the main repository.",7,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"url","","",7,{"inputs":[{"name":"self"}],"output":{"name":"url"}}],[11,"is_path","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_registry","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_git","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"load","","Creates an implementation of `Source` corresponding to this ID.",7,{"inputs":[{"name":"self"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"precise","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"git_reference","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"with_precise","","",7,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"sourceid"}}],[11,"is_default_registry","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"stable_hash","","",7,{"inputs":[{"name":"self"},{"name":"path"},{"name":"s"}],"output":null}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"option"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"ordering"}}],[11,"serialize","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",7,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",7,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pretty_ref","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",10,{"inputs":[],"output":{"name":"sourcemap"}}],[11,"contains","","",10,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"bool"}}],[11,"get","","",10,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"option"}}],[11,"get_mut","","",10,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"option"}}],[11,"get_by_package_id","","",10,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"option"}}],[11,"insert","","",10,{"inputs":[{"name":"self"},{"name":"box"}],"output":null}],[11,"is_empty","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"len","","",10,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"sources","","",10,{"inputs":[{"name":"self"}],"output":{"name":"sources"}}],[11,"sources_mut","","",10,{"inputs":[{"name":"self"}],"output":{"name":"sourcesmut"}}],[11,"next","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"package","cargo::core","",null,null],[3,"Package","cargo::core::package","Information about a package that is available somewhere in the file system.",null,null],[3,"PackageSet","","",null,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"package"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",12,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","","",12,{"inputs":[{"name":"manifest"},{"name":"path"}],"output":{"name":"package"}}],[11,"for_path","","",12,{"inputs":[{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"dependencies","","",12,null],[11,"manifest","","",12,{"inputs":[{"name":"self"}],"output":{"name":"manifest"}}],[11,"manifest_path","","",12,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"name","","",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"package_id","","",12,{"inputs":[{"name":"self"}],"output":{"name":"packageid"}}],[11,"root","","",12,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"summary","","",12,{"inputs":[{"name":"self"}],"output":{"name":"summary"}}],[11,"targets","","",12,null],[11,"version","","",12,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"authors","","",12,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"publish","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_custom_build","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"find_closest_target","","",12,null],[11,"map_source","","",12,{"inputs":[{"name":"self"},{"name":"sourceid"},{"name":"sourceid"}],"output":{"name":"package"}}],[11,"to_registry_toml","","",12,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"package"}],"output":{"name":"bool"}}],[11,"hash","","",12,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"new","","",13,null],[11,"package_ids","","",13,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"get","","",13,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[11,"sources","","",13,{"inputs":[{"name":"self"}],"output":{"name":"ref"}}],[0,"package_id","cargo::core","",null,null],[3,"PackageId","cargo::core::package_id","Identifier for a specific version of a package in a specific source.",null,null],[3,"PackageIdStableHash","","",null,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"packageid"}}],[11,"serialize","","",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",14,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"hash","","",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"option"}}],[11,"cmp","","",14,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"ordering"}}],[11,"new","","",14,{"inputs":[{"name":"str"},{"name":"t"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"name","","",14,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"version","","",14,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"source_id","","",14,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[11,"with_precise","","",14,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"packageid"}}],[11,"with_source_id","","",14,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"packageid"}}],[11,"stable_hash","","",14,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"packageidstablehash"}}],[11,"hash","","",15,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"dependency","cargo::core","",null,null],[3,"Dependency","cargo::core::dependency","Information about a dependency requested by a Cargo manifest. Cheap to copy.",null,null],[4,"Platform","","",null,null],[13,"Name","","",16,null],[13,"Cfg","","",16,null],[4,"Kind","","",null,null],[13,"Normal","","",17,null],[13,"Development","","",17,null],[13,"Build","","",17,null],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"dependency"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"dependency"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"dependency"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"platform"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"platform"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"platform"}],"output":{"name":"bool"}}],[11,"serialize","","",18,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",17,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"parse","","Attempt to create a `Dependency` from an entry in the manifest.",18,{"inputs":[{"name":"str"},{"name":"option"},{"name":"sourceid"},{"name":"packageid"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"parse_no_deprecated","","Attempt to create a `Dependency` from an entry in the manifest.",18,{"inputs":[{"name":"str"},{"name":"option"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"new_override","","",18,{"inputs":[{"name":"str"},{"name":"sourceid"}],"output":{"name":"dependency"}}],[11,"version_req","","",18,{"inputs":[{"name":"self"}],"output":{"name":"versionreq"}}],[11,"name","","",18,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"source_id","","",18,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[11,"kind","","",18,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"specified_req","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"platform","","If none, this dependencies must be built for all platforms. If some, it must only be built for the specified platform.",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_kind","","",18,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"dependency"}}],[11,"set_features","","Sets the list of features requested for the package.",18,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"dependency"}}],[11,"set_default_features","","Sets whether the dependency requests default features of the package.",18,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"dependency"}}],[11,"set_optional","","Sets whether the dependency is optional.",18,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"dependency"}}],[11,"set_source_id","","Set the source id for this dependency",18,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"dependency"}}],[11,"set_version_req","","Set the version requirement for this dependency",18,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"dependency"}}],[11,"set_platform","","",18,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"dependency"}}],[11,"lock_to","","Lock this dependency to depending on the specified package id",18,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"dependency"}}],[11,"is_locked","","Returns whether this is a \"locked\" dependency, basically whether it has an exact version req.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_transitive","","Returns false if the dependency is only used to build the local package.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_build","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_optional","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"uses_default_features","","Returns true if the default features of the dependency are requested.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"features","","Returns the list of features that are requested by the dependency.",18,null],[11,"matches","","Returns true if the package (`sum`) can fulfill this dependency request.",18,{"inputs":[{"name":"self"},{"name":"summary"}],"output":{"name":"bool"}}],[11,"matches_ignoring_source","","Returns true if the package (`sum`) can fulfill this dependency request.",18,{"inputs":[{"name":"self"},{"name":"summary"}],"output":{"name":"bool"}}],[11,"matches_id","","Returns true if the package (`id`) can fulfill this dependency request.",18,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"bool"}}],[11,"map_source","","",18,{"inputs":[{"name":"self"},{"name":"sourceid"},{"name":"sourceid"}],"output":{"name":"dependency"}}],[11,"matches","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"option"}],"output":{"name":"bool"}}],[11,"serialize","","",16,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_str","","",16,{"inputs":[{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"manifest","cargo::core","",null,null],[3,"Manifest","cargo::core::manifest","Contains all the information about a package, as loaded from a Cargo.toml.",null,null],[3,"DelayedWarning","","When parsing `Cargo.toml`, some warnings should silenced if the manifest comes from a dependency. `ManifestWarning` allows this delayed emission of warnings.",null,null],[12,"message","","",19,null],[12,"is_critical","","",19,null],[3,"VirtualManifest","","",null,null],[3,"ManifestMetadata","","General metadata about a package which is just blindly uploaded to the registry.",null,null],[12,"authors","","",20,null],[12,"keywords","","",20,null],[12,"categories","","",20,null],[12,"license","","",20,null],[12,"license_file","","",20,null],[12,"description","","",20,null],[12,"readme","","",20,null],[12,"homepage","","",20,null],[12,"repository","","",20,null],[12,"documentation","","",20,null],[12,"badges","","",20,null],[3,"Profile","","",null,null],[12,"opt_level","","",21,null],[12,"lto","","",21,null],[12,"codegen_units","","",21,null],[12,"rustc_args","","",21,null],[12,"rustdoc_args","","",21,null],[12,"debuginfo","","",21,null],[12,"debug_assertions","","",21,null],[12,"overflow_checks","","",21,null],[12,"rpath","","",21,null],[12,"test","","",21,null],[12,"doc","","",21,null],[12,"run_custom_build","","",21,null],[12,"check","","",21,null],[12,"panic","","",21,null],[3,"Profiles","","",null,null],[12,"release","","",22,null],[12,"dev","","",22,null],[12,"test","","",22,null],[12,"test_deps","","",22,null],[12,"bench","","",22,null],[12,"bench_deps","","",22,null],[12,"doc","","",22,null],[12,"custom_build","","",22,null],[12,"check","","",22,null],[12,"doctest","","",22,null],[3,"Target","","Information about a binary, a library, an example, etc. that is part of the package.",null,null],[4,"EitherManifest","","",null,null],[13,"Real","","",23,null],[13,"Virtual","","",23,null],[4,"LibKind","","",null,null],[13,"Lib","","",24,null],[13,"Rlib","","",24,null],[13,"Dylib","","",24,null],[13,"ProcMacro","","",24,null],[13,"Other","","",24,null],[4,"TargetKind","","",null,null],[13,"Lib","","",25,null],[13,"Bin","","",25,null],[13,"Test","","",25,null],[13,"Bench","","",25,null],[13,"ExampleLib","","",25,null],[13,"ExampleBin","","",25,null],[13,"CustomBuild","","",25,null],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"manifest"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"delayedwarning"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"virtualmanifest"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"manifestmetadata"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"manifestmetadata"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"manifestmetadata"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"libkind"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"libkind"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"libkind"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"partial_cmp","","",24,{"inputs":[{"name":"self"},{"name":"libkind"}],"output":{"name":"option"}}],[11,"lt","","",24,{"inputs":[{"name":"self"},{"name":"libkind"}],"output":{"name":"bool"}}],[11,"le","","",24,{"inputs":[{"name":"self"},{"name":"libkind"}],"output":{"name":"bool"}}],[11,"gt","","",24,{"inputs":[{"name":"self"},{"name":"libkind"}],"output":{"name":"bool"}}],[11,"ge","","",24,{"inputs":[{"name":"self"},{"name":"libkind"}],"output":{"name":"bool"}}],[11,"cmp","","",24,{"inputs":[{"name":"self"},{"name":"libkind"}],"output":{"name":"ordering"}}],[11,"from_str","","",24,{"inputs":[{"name":"str"}],"output":{"name":"libkind"}}],[11,"crate_type","","Returns the argument suitable for `--crate-type` to pass to rustc.",24,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"linkable","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"targetkind"}}],[11,"hash","","",25,null],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"targetkind"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"targetkind"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"self"},{"name":"targetkind"}],"output":{"name":"option"}}],[11,"lt","","",25,{"inputs":[{"name":"self"},{"name":"targetkind"}],"output":{"name":"bool"}}],[11,"le","","",25,{"inputs":[{"name":"self"},{"name":"targetkind"}],"output":{"name":"bool"}}],[11,"gt","","",25,{"inputs":[{"name":"self"},{"name":"targetkind"}],"output":{"name":"bool"}}],[11,"ge","","",25,{"inputs":[{"name":"self"},{"name":"targetkind"}],"output":{"name":"bool"}}],[11,"cmp","","",25,{"inputs":[{"name":"self"},{"name":"targetkind"}],"output":{"name":"ordering"}}],[11,"serialize","","",25,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"profile"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"profile"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"profile"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",21,null],[11,"default","","",22,{"inputs":[],"output":{"name":"profiles"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"profiles"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"profiles"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"profiles"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"hash","","",28,null],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"target"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"target"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",28,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","","",26,{"inputs":[{"name":"summary"},{"name":"vec"},{"name":"vec"},{"name":"vec"},{"name":"option"},{"name":"manifestmetadata"},{"name":"profiles"},{"name":"bool"},{"name":"vec"},{"name":"hashmap"},{"name":"workspaceconfig"},{"name":"features"},{"name":"option"},{"name":"rc"}],"output":{"name":"manifest"}}],[11,"dependencies","","",26,null],[11,"exclude","","",26,null],[11,"include","","",26,null],[11,"metadata","","",26,{"inputs":[{"name":"self"}],"output":{"name":"manifestmetadata"}}],[11,"name","","",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"package_id","","",26,{"inputs":[{"name":"self"}],"output":{"name":"packageid"}}],[11,"summary","","",26,{"inputs":[{"name":"self"}],"output":{"name":"summary"}}],[11,"targets","","",26,null],[11,"version","","",26,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"warnings","","",26,null],[11,"profiles","","",26,{"inputs":[{"name":"self"}],"output":{"name":"profiles"}}],[11,"publish","","",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"replace","","",26,null],[11,"original","","",26,{"inputs":[{"name":"self"}],"output":{"name":"tomlmanifest"}}],[11,"patch","","",26,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"links","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"workspace_config","","",26,{"inputs":[{"name":"self"}],"output":{"name":"workspaceconfig"}}],[11,"features","","",26,{"inputs":[{"name":"self"}],"output":{"name":"features"}}],[11,"add_warning","","",26,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"add_critical_warning","","",26,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"set_summary","","",26,{"inputs":[{"name":"self"},{"name":"summary"}],"output":null}],[11,"map_source","","",26,{"inputs":[{"name":"self"},{"name":"sourceid"},{"name":"sourceid"}],"output":{"name":"manifest"}}],[11,"feature_gate","","",26,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"print_teapot","","",26,{"inputs":[{"name":"self"},{"name":"config"}],"output":null}],[11,"new","","",27,{"inputs":[{"name":"vec"},{"name":"hashmap"},{"name":"workspaceconfig"},{"name":"profiles"}],"output":{"name":"virtualmanifest"}}],[11,"replace","","",27,null],[11,"patch","","",27,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"workspace_config","","",27,{"inputs":[{"name":"self"}],"output":{"name":"workspaceconfig"}}],[11,"profiles","","",27,{"inputs":[{"name":"self"}],"output":{"name":"profiles"}}],[11,"lib_target","","",28,{"inputs":[{"name":"str"},{"name":"vec"},{"name":"pathbuf"}],"output":{"name":"target"}}],[11,"bin_target","","",28,{"inputs":[{"name":"str"},{"name":"pathbuf"},{"name":"option"}],"output":{"name":"target"}}],[11,"custom_build_target","","Builds a `Target` corresponding to the `build = \"build.rs\"` entry.",28,{"inputs":[{"name":"str"},{"name":"pathbuf"}],"output":{"name":"target"}}],[11,"example_target","","",28,{"inputs":[{"name":"str"},{"name":"vec"},{"name":"pathbuf"},{"name":"option"}],"output":{"name":"target"}}],[11,"test_target","","",28,{"inputs":[{"name":"str"},{"name":"pathbuf"},{"name":"option"}],"output":{"name":"target"}}],[11,"bench_target","","",28,{"inputs":[{"name":"str"},{"name":"pathbuf"},{"name":"option"}],"output":{"name":"target"}}],[11,"name","","",28,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"crate_name","","",28,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"src_path","","",28,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"required_features","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"kind","","",28,{"inputs":[{"name":"self"}],"output":{"name":"targetkind"}}],[11,"tested","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"harness","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"documented","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"for_host","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"benched","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"doctested","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"allows_underscores","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_lib","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_dylib","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_cdylib","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"linkable","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_bin","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_example","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_bin_example","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_test","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_bench","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_custom_build","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"rustc_crate_types","","Returns the arguments suitable for `--crate-type` to pass to rustc.",28,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"can_lto","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_tested","","",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"target"}}],[11,"set_benched","","",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"target"}}],[11,"set_doctest","","",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"target"}}],[11,"set_for_host","","",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"target"}}],[11,"set_harness","","",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"target"}}],[11,"set_doc","","",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"target"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default_dev","","",21,{"inputs":[],"output":{"name":"profile"}}],[11,"default_release","","",21,{"inputs":[],"output":{"name":"profile"}}],[11,"default_test","","",21,{"inputs":[],"output":{"name":"profile"}}],[11,"default_bench","","",21,{"inputs":[],"output":{"name":"profile"}}],[11,"default_doc","","",21,{"inputs":[],"output":{"name":"profile"}}],[11,"default_custom_build","","",21,{"inputs":[],"output":{"name":"profile"}}],[11,"default_check","","",21,{"inputs":[],"output":{"name":"profile"}}],[11,"default_doctest","","",21,{"inputs":[],"output":{"name":"profile"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"profile"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"resolver","cargo::core","Resolution of the entire dependency graph for a crate",null,null],[3,"EncodableResolve","cargo::core::resolver","",null,null],[3,"EncodableDependency","","",null,null],[3,"EncodablePackageId","","",null,null],[3,"WorkspaceResolve","","",null,null],[12,"ws","","",29,null],[12,"resolve","","",29,null],[12,"use_root_key","","",29,null],[3,"Resolve","","Represents a fully resolved package dependency graph. Each node in the graph is a package and edges represent dependencies between packages.",null,null],[3,"Deps","","",null,null],[3,"DepsNotReplaced","","",null,null],[4,"Method","","",null,null],[13,"Everything","","",30,null],[13,"Required","","",30,null],[12,"dev_deps","cargo::core::resolver::Method","",30,null],[12,"features","","",30,null],[12,"uses_default_features","","",30,null],[5,"resolve","cargo::core::resolver","Builds the list of all packages required to build the first argument.",null,null],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_resolve","","",31,{"inputs":[{"name":"self"},{"name":"workspace"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"self"},{"name":"encodabledependency"}],"output":{"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"self"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"self"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"self"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"self"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"cmp","","",32,{"inputs":[{"name":"self"},{"name":"encodabledependency"}],"output":{"name":"ordering"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"encodabledependency"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"self"},{"name":"encodablepackageid"}],"output":{"name":"option"}}],[11,"lt","","",33,{"inputs":[{"name":"self"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"le","","",33,{"inputs":[{"name":"self"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"gt","","",33,{"inputs":[{"name":"self"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"ge","","",33,{"inputs":[{"name":"self"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"cmp","","",33,{"inputs":[{"name":"self"},{"name":"encodablepackageid"}],"output":{"name":"ordering"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"encodablepackageid"}],"output":{"name":"bool"}}],[11,"hash","","",33,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"encodablepackageid"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",33,{"inputs":[{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"serialize","","",33,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",33,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"serialize","","",29,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[6,"Metadata","","",null,null],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"path_to_top","","Resolves one of the paths from the given dependent package up to the root.",34,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"vec"}}],[11,"register_used_patches","","",34,{"inputs":[{"name":"self"},{"name":"hashmap"}],"output":null}],[11,"merge_from","","",34,{"inputs":[{"name":"self"},{"name":"resolve"}],"output":{"name":"cargoresult"}}],[11,"iter","","",34,{"inputs":[{"name":"self"}],"output":{"name":"nodes"}}],[11,"deps","","",34,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"deps"}}],[11,"deps_not_replaced","","",34,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"depsnotreplaced"}}],[11,"replacement","","",34,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"option"}}],[11,"replacements","","",34,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"features","","",34,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"hashset"}}],[11,"features_sorted","","",34,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"vec"}}],[11,"query","","",34,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"unused_patches","","",34,null],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",36,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"summary","cargo::core","",null,null],[3,"Summary","cargo::core::summary","Subset of a `Manifest`. Contains only the most important informations about a package.",null,null],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"summary"}}],[11,"new","","",37,{"inputs":[{"name":"packageid"},{"name":"vec"},{"name":"hashmap"}],"output":{"name":"cargoresult"}}],[11,"package_id","","",37,{"inputs":[{"name":"self"}],"output":{"name":"packageid"}}],[11,"name","","",37,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"version","","",37,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"source_id","","",37,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[11,"dependencies","","",37,null],[11,"features","","",37,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"checksum","","",37,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"override_id","","",37,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"summary"}}],[11,"set_checksum","","",37,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"summary"}}],[11,"map_dependencies","","",37,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"summary"}}],[11,"map_source","","",37,{"inputs":[{"name":"self"},{"name":"sourceid"},{"name":"sourceid"}],"output":{"name":"summary"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"summary"}],"output":{"name":"bool"}}],[0,"shell","cargo::core","",null,null],[3,"Shell","cargo::core::shell","",null,null],[4,"Verbosity","","",null,null],[13,"Verbose","","",38,null],[13,"Normal","","",38,null],[13,"Quiet","","",38,null],[4,"ColorChoice","","",null,null],[13,"Always","","",39,null],[13,"Never","","",39,null],[13,"CargoAuto","","",39,null],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"verbosity"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"verbosity"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"colorchoice"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"colorchoice"}}],[11,"new","","",40,{"inputs":[],"output":{"name":"shell"}}],[11,"from_write","","",40,{"inputs":[{"name":"box"}],"output":{"name":"shell"}}],[11,"err","","",40,{"inputs":[{"name":"self"}],"output":{"name":"write"}}],[11,"status","","",40,{"inputs":[{"name":"self"},{"name":"t"},{"name":"u"}],"output":{"name":"cargoresult"}}],[11,"status_with_color","","",40,{"inputs":[{"name":"self"},{"name":"t"},{"name":"u"},{"name":"color"}],"output":{"name":"cargoresult"}}],[11,"verbose","","",40,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"cargoresult"}}],[11,"concise","","",40,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"cargoresult"}}],[11,"error","","",40,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"cargoresult"}}],[11,"warn","","",40,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"cargoresult"}}],[11,"set_verbosity","","",40,{"inputs":[{"name":"self"},{"name":"verbosity"}],"output":null}],[11,"verbosity","","",40,{"inputs":[{"name":"self"}],"output":{"name":"verbosity"}}],[11,"set_color_choice","","",40,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"cargoresult"}}],[11,"color_choice","","",40,{"inputs":[{"name":"self"}],"output":{"name":"colorchoice"}}],[0,"registry","cargo::core","",null,null],[3,"PackageRegistry","cargo::core::registry","This structure represents a registry of known packages. It internally contains a number of `Box<Source>` instances which are used to load a `Package` from.",null,null],[8,"Registry","","Source of information about a group of packages.",null,null],[10,"query","","Attempt to find the packages that match a dependency request.",41,{"inputs":[{"name":"self"},{"name":"dependency"},{"name":"fnmut"}],"output":{"name":"cargoresult"}}],[11,"query_vec","","",41,{"inputs":[{"name":"self"},{"name":"dependency"}],"output":{"name":"cargoresult"}}],[10,"supports_checksums","","Returns whether or not this registry will return summaries with checksums listed.",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"requires_precise","","Returns whether or not this registry will return summaries with the `precise` field in the source id listed.",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","",42,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"get","","",42,null],[11,"add_sources","","",42,null],[11,"add_preloaded","","",42,{"inputs":[{"name":"self"},{"name":"box"}],"output":null}],[11,"add_override","","",42,{"inputs":[{"name":"self"},{"name":"box"}],"output":null}],[11,"register_lock","","",42,{"inputs":[{"name":"self"},{"name":"packageid"},{"name":"vec"}],"output":null}],[11,"patch","","",42,null],[11,"patches","","",42,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"lock","","This function is used to transform a summary to another locked summary if possible. This is where the concept of a lockfile comes into play.",42,{"inputs":[{"name":"self"},{"name":"summary"}],"output":{"name":"summary"}}],[11,"query","","",42,{"inputs":[{"name":"self"},{"name":"dependency"},{"name":"fnmut"}],"output":{"name":"cargoresult"}}],[11,"supports_checksums","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"requires_precise","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","cargo::core","",43,{"inputs":[{"name":"self"}],"output":{"name":"packageidspec"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"packageidspec"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"packageidspec"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"parse","","",43,{"inputs":[{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"query_str","","",43,{"inputs":[{"name":"str"},{"name":"i"}],"output":{"name":"cargoresult"}}],[11,"from_package_id","","",43,{"inputs":[{"name":"packageid"}],"output":{"name":"packageidspec"}}],[11,"name","","",43,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"version","","",43,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"url","","",43,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_url","","",43,{"inputs":[{"name":"self"},{"name":"url"}],"output":null}],[11,"matches","","",43,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"bool"}}],[11,"query","","",43,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"workspaceconfig"}}],[11,"new","","Creates a new workspace given the target manifest pointed to by `manifest_path`.",44,{"inputs":[{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"current_manifest","","",44,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"ephemeral","","Creates a \"temporary workspace\" from one package which only contains that package.",44,{"inputs":[{"name":"package"},{"name":"config"},{"name":"option"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[11,"current","","Returns the current package of this workspace.",44,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"current_opt","","",44,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_virtual","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"config","","Returns the `Config` this workspace is associated with.",44,{"inputs":[{"name":"self"}],"output":{"name":"config"}}],[11,"profiles","","",44,{"inputs":[{"name":"self"}],"output":{"name":"profiles"}}],[11,"root","","Returns the root path of this workspace.",44,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"target_dir","","",44,{"inputs":[{"name":"self"}],"output":{"name":"filesystem"}}],[11,"root_replace","","Returns the root [replace] section of this workspace.",44,null],[11,"root_patch","","Returns the root [patch] section of this workspace.",44,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"members","","Returns an iterator over all packages in this workspace",44,{"inputs":[{"name":"self"}],"output":{"name":"members"}}],[11,"is_ephemeral","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"require_optional_deps","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_empty","","",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"next","","",45,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"features"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"features"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"test_dummy_stable","","",47,{"inputs":[],"output":{"name":"feature"}}],[11,"test_dummy_unstable","","",47,{"inputs":[],"output":{"name":"feature"}}],[11,"new","","",46,null],[11,"activated","","",46,null],[11,"require","","",46,{"inputs":[{"name":"self"},{"name":"feature"}],"output":{"name":"cargoresult"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"cliunstable"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"parse","","",3,null],[0,"ops","cargo","",null,null],[3,"CleanOptions","cargo::ops","",null,null],[12,"spec","","",48,null],[12,"target","","",48,null],[12,"config","","",48,null],[12,"release","","",48,null],[3,"CompileOptions","","Contains information about how a package should be compiled.",null,null],[12,"config","","",49,null],[12,"jobs","","Number of concurrent jobs to use.",49,null],[12,"target","","The target platform to compile for (example: `i686-unknown-linux-gnu`).",49,null],[12,"features","","Extra features to build for the root package",49,null],[12,"all_features","","Flag whether all available features should be built for the root package",49,null],[12,"no_default_features","","Flag if the default feature should be built for the root package",49,null],[12,"spec","","A set of packages to build.",49,null],[12,"filter","","Filter to apply to the root package to select which targets will be built.",49,null],[12,"release","","Whether this is a release build or not",49,null],[12,"mode","","Mode for this compile.",49,null],[12,"message_format","","`--error_format` flag for the compiler.",49,null],[12,"target_rustdoc_args","","Extra arguments to be passed to rustdoc (for main crate and dependencies)",49,null],[12,"target_rustc_args","","The specified target will be compiled with all the available arguments, note that this only accounts for the final invocation of rustc",49,null],[3,"Compilation","","A structure returning the result of a compilation.",null,null],[12,"libraries","","A mapping from a package to the list of libraries that need to be linked when working with that package.",50,null],[12,"tests","","An array of all tests created during this compilation.",50,null],[12,"binaries","","An array of all binaries created.",50,null],[12,"native_dirs","","All directories for the output of native build commands.",50,null],[12,"root_output","","Root output directory (for the local package's artifacts)",50,null],[12,"deps_output","","Output directory for rust dependencies. May be for the host or for a specific target.",50,null],[12,"host_deps_output","","Output directory for the rust host dependencies.",50,null],[12,"host_dylib_path","","The path to rustc's own libstd",50,null],[12,"target_dylib_path","","The path to libstd for the target",50,null],[12,"extra_env","","Extra environment variables that were passed to compilations and should be passed to future invocations of programs.",50,null],[12,"to_doc_test","","",50,null],[12,"cfgs","","Features per package enabled during this compilation.",50,null],[12,"target","","",50,null],[3,"Unit","","",null,null],[12,"pkg","","",51,null],[12,"target","","",51,null],[12,"profile","","",51,null],[12,"kind","","",51,null],[3,"Context","","",null,null],[12,"ws","","",52,null],[12,"config","","",52,null],[12,"resolve","","",52,null],[12,"compilation","","",52,null],[12,"packages","","",52,null],[12,"build_state","","",52,null],[12,"build_script_overridden","","",52,null],[12,"build_explicit_deps","","",52,null],[12,"fingerprints","","",52,null],[12,"compiled","","",52,null],[12,"build_config","","",52,null],[12,"build_scripts","","",52,null],[12,"links","","",52,null],[12,"used_in_plugin","","",52,null],[12,"jobserver","","",52,null],[3,"BuildOutput","","Contains the parsed output of a custom build script.",null,null],[12,"library_paths","","Paths to pass to rustc with the `-L` flag",53,null],[12,"library_links","","Names and link kinds of libraries, suitable for the `-l` flag",53,null],[12,"cfgs","","Various `--cfg` flags to pass to the compiler",53,null],[12,"env","","Additional environment variables to run the compiler with.",53,null],[12,"metadata","","Metadata to pass to the immediate dependencies",53,null],[12,"rerun_if_changed","","Paths to trigger a rerun of this build script.",53,null],[12,"rerun_if_env_changed","","Environment variables which, when changed, will cause a rebuild.",53,null],[12,"warnings","","Warnings generated by this build,",53,null],[3,"BuildConfig","","",null,null],[12,"host_triple","","",54,null],[12,"host","","",54,null],[12,"requested_target","","",54,null],[12,"target","","",54,null],[12,"jobs","","",54,null],[12,"release","","",54,null],[12,"test","","",54,null],[12,"doc_all","","",54,null],[12,"json_messages","","",54,null],[3,"TargetConfig","","",null,null],[12,"ar","","",55,null],[12,"linker","","",55,null],[12,"overrides","","",55,null],[3,"DefaultExecutor","","A DefaultExecutor calls rustc without doing anything else. It is Cargo's default behaviour.",null,null],[3,"NewOptions","","",null,null],[12,"version_control","","",56,null],[12,"bin","","",56,null],[12,"lib","","",56,null],[12,"path","","",56,null],[12,"name","","",56,null],[3,"DocOptions","","",null,null],[12,"open_result","","",57,null],[12,"compile_opts","","",57,null],[3,"UpdateOptions","","",null,null],[12,"config","","",58,null],[12,"to_update","","",58,null],[12,"precise","","",58,null],[12,"aggressive","","",58,null],[3,"TestOptions","","",null,null],[12,"compile_opts","","",59,null],[12,"no_run","","",59,null],[12,"no_fail_fast","","",59,null],[12,"only_doc","","",59,null],[3,"PackageOpts","","",null,null],[12,"config","","",60,null],[12,"list","","",60,null],[12,"check_metadata","","",60,null],[12,"allow_dirty","","",60,null],[12,"verify","","",60,null],[12,"jobs","","",60,null],[12,"target","","",60,null],[3,"RegistryConfig","","",null,null],[12,"index","","",61,null],[12,"token","","",61,null],[3,"OwnersOptions","","",null,null],[12,"krate","","",62,null],[12,"token","","",62,null],[12,"index","","",62,null],[12,"to_add","","",62,null],[12,"to_remove","","",62,null],[12,"list","","",62,null],[3,"PublishOpts","","",null,null],[12,"config","","",63,null],[12,"token","","",63,null],[12,"index","","",63,null],[12,"verify","","",63,null],[12,"allow_dirty","","",63,null],[12,"jobs","","",63,null],[12,"target","","",63,null],[12,"dry_run","","",63,null],[3,"OutputMetadataOptions","","",null,null],[12,"features","","",64,null],[12,"no_default_features","","",64,null],[12,"all_features","","",64,null],[12,"no_deps","","",64,null],[12,"version","","",64,null],[3,"ExportInfo","","",null,null],[4,"CompileFilter","","",null,null],[13,"Default","","",65,null],[12,"required_features_filterable","cargo::ops::CompileFilter","Flag whether targets can be safely skipped when required-features are not satisfied.",65,null],[13,"Only","cargo::ops","",65,null],[12,"lib","cargo::ops::CompileFilter","",65,null],[12,"bins","","",65,null],[12,"examples","","",65,null],[12,"tests","","",65,null],[12,"benches","","",65,null],[4,"CompileMode","cargo::ops","",null,null],[13,"Test","","",66,null],[13,"Build","","",66,null],[13,"Check","","",66,null],[13,"Bench","","",66,null],[13,"Doc","","",66,null],[12,"deps","cargo::ops::CompileMode","",66,null],[13,"Doctest","cargo::ops","",66,null],[4,"FilterRule","","",null,null],[13,"All","","",67,null],[13,"Just","","",67,null],[4,"MessageFormat","","",null,null],[13,"Human","","",68,null],[13,"Json","","",68,null],[4,"Packages","","",null,null],[13,"All","","",69,null],[13,"OptOut","","",69,null],[13,"Packages","","",69,null],[4,"Kind","","",null,null],[13,"Host","","",70,null],[13,"Target","","",70,null],[4,"VersionControl","","",null,null],[13,"Git","","",71,null],[13,"Hg","","",71,null],[13,"Pijul","","",71,null],[13,"Fossil","","",71,null],[13,"NoVcs","","",71,null],[5,"clean","","Cleans the project from build artifacts.",null,{"inputs":[{"name":"workspace"},{"name":"cleanoptions"}],"output":{"name":"cargoresult"}}],[5,"compile","","",null,{"inputs":[{"name":"workspace"},{"name":"compileoptions"}],"output":{"name":"cargoresult"}}],[5,"compile_with_exec","","",null,{"inputs":[{"name":"workspace"},{"name":"compileoptions"},{"name":"arc"}],"output":{"name":"cargoresult"}}],[5,"compile_ws","","",null,{"inputs":[{"name":"workspace"},{"name":"option"},{"name":"compileoptions"},{"name":"arc"}],"output":{"name":"cargoresult"}}],[5,"read_package","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"read_packages","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"compile_targets","","",null,null],[5,"is_bad_artifact_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"run","","",null,null],[5,"install","","",null,{"inputs":[{"name":"option"},{"name":"vec"},{"name":"sourceid"},{"name":"option"},{"name":"compileoptions"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[5,"install_list","","",null,{"inputs":[{"name":"option"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"uninstall","","",null,null],[5,"new","","",null,{"inputs":[{"name":"newoptions"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"init","","",null,{"inputs":[{"name":"newoptions"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"doc","","",null,{"inputs":[{"name":"workspace"},{"name":"docoptions"}],"output":{"name":"cargoresult"}}],[5,"generate_lockfile","","",null,{"inputs":[{"name":"workspace"}],"output":{"name":"cargoresult"}}],[5,"update_lockfile","","",null,{"inputs":[{"name":"workspace"},{"name":"updateoptions"}],"output":{"name":"cargoresult"}}],[5,"load_pkg_lockfile","","",null,{"inputs":[{"name":"workspace"}],"output":{"name":"cargoresult"}}],[5,"write_pkg_lockfile","","",null,{"inputs":[{"name":"workspace"},{"name":"resolve"}],"output":{"name":"cargoresult"}}],[5,"run_tests","","",null,null],[5,"run_benches","","",null,null],[5,"package","","",null,{"inputs":[{"name":"workspace"},{"name":"packageopts"}],"output":{"name":"cargoresult"}}],[5,"publish","","",null,{"inputs":[{"name":"workspace"},{"name":"publishopts"}],"output":{"name":"cargoresult"}}],[5,"registry_configuration","","",null,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"registry_login","","",null,{"inputs":[{"name":"config"},{"name":"string"}],"output":{"name":"cargoresult"}}],[5,"search","","",null,{"inputs":[{"name":"str"},{"name":"config"},{"name":"option"},{"name":"u8"}],"output":{"name":"cargoresult"}}],[5,"http_proxy_exists","","Determine if an http proxy exists.",null,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"http_handle","","Create a new HTTP handle with appropriate global configuration for cargo.",null,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"modify_owners","","",null,{"inputs":[{"name":"config"},{"name":"ownersoptions"}],"output":{"name":"cargoresult"}}],[5,"yank","","",null,{"inputs":[{"name":"config"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[5,"fetch","","Executes `cargo fetch`.",null,{"inputs":[{"name":"workspace"}],"output":{"name":"cargoresult"}}],[5,"pkgid","","",null,{"inputs":[{"name":"workspace"},{"name":"option"}],"output":{"name":"cargoresult"}}],[5,"resolve_ws","","Resolve all dependencies for the workspace using the previous lockfile as a guide if present.",null,{"inputs":[{"name":"workspace"}],"output":{"name":"cargoresult"}}],[5,"resolve_ws_precisely","","Resolves dependencies for some packages of the workspace, taking into account `paths` overrides and activated features.",null,null],[5,"resolve_with_previous","","Resolve all dependencies for a package using an optional previous instance of resolve to guide the resolution process.",null,null],[5,"output_metadata","","Loads the manifest, resolves the dependencies of the project to the concrete used versions - considering overrides - and writes all dependencies in a JSON format to stdout.",null,{"inputs":[{"name":"workspace"},{"name":"outputmetadataoptions"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",49,{"inputs":[{"name":"config"},{"name":"compilemode"}],"output":{"name":"compileoptions"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"compilemode"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"compilemode"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"self"},{"name":"compilemode"}],"output":{"name":"bool"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"messageformat"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"messageformat"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"packages"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"packages"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"self"},{"name":"packages"}],"output":{"name":"bool"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_flags","","",69,{"inputs":[{"name":"bool"},{"name":"bool"},{"name":"vec"},{"name":"vec"}],"output":{"name":"cargoresult"}}],[11,"into_package_id_specs","","",69,{"inputs":[{"name":"self"},{"name":"workspace"}],"output":{"name":"cargoresult"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"filterrule"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",67,null],[11,"try_collect","","",67,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","",65,null],[11,"matches","","",65,{"inputs":[{"name":"self"},{"name":"target"}],"output":{"name":"bool"}}],[11,"is_specific","","",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"versioncontrol"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"versioncontrol"}],"output":{"name":"bool"}}],[11,"deserialize","","",71,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","","",56,{"inputs":[{"name":"option"},{"name":"bool"},{"name":"bool"},{"name":"str"},{"name":"option"}],"output":{"name":"newoptions"}}],[11,"new","","",50,{"inputs":[{"name":"config"}],"output":{"name":"compilation"}}],[11,"rustc_process","","See `process`.",50,{"inputs":[{"name":"self"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"rustdoc_process","","See `process`.",50,{"inputs":[{"name":"self"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"host_process","","See `process`.",50,{"inputs":[{"name":"self"},{"name":"t"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"target_process","","See `process`.",50,{"inputs":[{"name":"self"},{"name":"t"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"unit"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"bool"}}],[11,"hash","","",51,null],[11,"new","","",52,{"inputs":[{"name":"workspace"},{"name":"resolve"},{"name":"packageset"},{"name":"config"},{"name":"buildconfig"},{"name":"profiles"}],"output":{"name":"cargoresult"}}],[11,"prepare","","Prepare this context, ensuring that all filesystem directories are in place.",52,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"probe_target_info","","Ensure that we've collected all target-specific information to compile all the units mentioned in `units`.",52,null],[11,"build_used_in_plugin_map","","Builds up the `used_in_plugin` internal to this context from the list of top-level units.",52,null],[11,"deps_dir","","Returns the directories where Rust crate dependencies are found for the specified unit.",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"path"}}],[11,"fingerprint_dir","","Returns the directory for the specified unit where fingerprint information is stored.",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"pathbuf"}}],[11,"build_script_dir","","Returns the appropriate directory layout for either a plugin or not.",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"pathbuf"}}],[11,"build_script_out_dir","","Returns the appropriate directory layout for either a plugin or not.",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"pathbuf"}}],[11,"host_deps","","",52,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"target_root","","Return the root of the build output tree",52,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"out_dir","","Returns the appropriate output directory for the specified package and target.",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"pathbuf"}}],[11,"host_triple","","Return the host triple for this context",52,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"target_triple","","Return the target triple which this context is targeting.",52,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"requested_target","","Requested (not actual) target for the build",52,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"target_short_hash","","Get the short hash based only on the PackageId Used for the metadata when target_metadata returns None",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"string"}}],[11,"target_metadata","","Get the metadata for a target in a specific profile We build to the path: \"{filename}-{target_metadata}\" We use a linking step to link/copy to a predictable filename like `target/debug/libfoo.{a,so,rlib}` and such.",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"option"}}],[11,"file_stem","","Returns the file stem for a given target/profile combo (with metadata)",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"string"}}],[11,"link_stem","","Returns a tuple with the directory and name of the hard link we expect our target to be copied to. Eg, file_stem may be out_dir/deps/foo-abcdef and link_stem would be out_dir/foo This function returns it in two parts so the caller can add prefix/suffix to filename separately Returns an Option because in some cases we don't want to link (eg a dependent lib)",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"option"}}],[11,"target_filenames","","Return the filenames that the given target for the given profile will generate as a list of 3-tuples (filename, link_dst, linkable) filename: filename rustc compiles to. (Often has metadata suffix). link_dst: Optional file to link/copy the result to (without metadata suffix) linkable: Whether possible to link against file (eg it's a library)",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"cargoresult"}}],[11,"dep_targets","","For a package, return all targets which are registered as dependencies for that package.",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"cargoresult"}}],[11,"dep_run_custom_build","","Returns the dependencies needed to run a build script.",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"cargoresult"}}],[11,"get_package","","Gets a package for the given package id.",52,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[11,"linker","","Get the user-specified linker for a particular host or target",52,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"option"}}],[11,"ar","","Get the user-specified `ar` program for a particular host or target",52,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"option"}}],[11,"cfg","","Get the list of cfg printed out from the compiler for the specified kind",52,null],[11,"jobs","","Number of jobs specified for this build",52,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"lib_profile","","",52,{"inputs":[{"name":"self"}],"output":{"name":"profile"}}],[11,"lib_or_check_profile","","",52,{"inputs":[{"name":"self"},{"name":"unit"},{"name":"target"}],"output":{"name":"profile"}}],[11,"build_script_profile","","",52,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"profile"}}],[11,"incremental_args","","",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"cargoresult"}}],[11,"rustflags_args","","",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"cargoresult"}}],[11,"rustdocflags_args","","",52,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"cargoresult"}}],[11,"show_warnings","","",52,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"buildoutput"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",53,null],[11,"parse_file","","",53,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"parse","","",53,null],[11,"parse_rustc_flags","","",53,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"parse_rustc_env","","",53,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"hash","","",70,null],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"option"}}],[11,"cmp","","",70,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"ordering"}}],[11,"default","","",54,{"inputs":[],"output":{"name":"buildconfig"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"buildconfig"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"targetconfig"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"targetconfig"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"defaultexecutor"}}],[8,"Executor","","A glorified callback for executing calls to rustc. Rather than calling rustc directly, we'll use an Executor, giving clients an opportunity to intercept the build calls.",null,null],[11,"init","","Called after a rustc process invocation is prepared up-front for a given unit of work (may still be modified for runtime-known dependencies, when the work is actually executed).",73,{"inputs":[{"name":"self"},{"name":"context"},{"name":"unit"}],"output":null}],[11,"exec","","In case of an `Err`, Cargo will not continue with the build process for this package.",73,{"inputs":[{"name":"self"},{"name":"processbuilder"},{"name":"packageid"},{"name":"target"}],"output":{"name":"cargoresult"}}],[11,"exec_json","","",73,{"inputs":[{"name":"self"},{"name":"processbuilder"},{"name":"packageid"},{"name":"target"},{"name":"fnmut"},{"name":"fnmut"}],"output":{"name":"cargoresult"}}],[11,"force_rebuild","","Queried when queuing each unit of work. If it returns true, then the unit will always be rebuilt, independent of whether it needs to be.",73,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"bool"}}],[0,"sources","cargo","",null,null],[3,"GitSource","cargo::sources","",null,null],[0,"config","","Implementation of configuration for various sources",null,null],[3,"SourceConfigMap","cargo::sources::config","",null,null],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"sourceconfigmap"}}],[11,"new","","",74,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"empty","","",74,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"config","","",74,{"inputs":[{"name":"self"}],"output":{"name":"config"}}],[11,"load","","",74,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[0,"directory","cargo::sources","",null,null],[3,"DirectorySource","cargo::sources::directory","",null,null],[11,"new","","",75,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"directorysource"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"query","","",75,{"inputs":[{"name":"self"},{"name":"dependency"},{"name":"fnmut"}],"output":{"name":"cargoresult"}}],[11,"supports_checksums","","",75,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"requires_precise","","",75,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"source_id","","",75,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[11,"update","","",75,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"download","","",75,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[11,"fingerprint","","",75,{"inputs":[{"name":"self"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"verify","","",75,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[0,"git","cargo::sources","",null,null],[3,"GitRemote","cargo::sources::git","GitRemote represents a remote repository. It gets cloned into a local GitDatabase.",null,null],[3,"GitDatabase","","GitDatabase is a local clone of a remote repository's database. Multiple GitCheckouts can be cloned from this GitDatabase.",null,null],[3,"GitCheckout","","GitCheckout is a local checkout of a particular revision. Calling `clone_into` with a reference will resolve the reference into a revision, and return a CargoError if no revision for that reference was found.",null,null],[3,"GitRevision","","",null,null],[3,"GitSource","","",null,null],[5,"fetch","","",null,{"inputs":[{"name":"repository"},{"name":"url"},{"name":"str"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"canonicalize_url","","",null,{"inputs":[{"name":"url"}],"output":{"name":"cargoresult"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"gitrevision"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"self"},{"name":"gitrevision"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"gitrevision"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",76,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"gitremote"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"self"},{"name":"gitremote"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"gitremote"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",77,{"inputs":[{"name":"url"}],"output":{"name":"gitremote"}}],[11,"url","","",77,{"inputs":[{"name":"self"}],"output":{"name":"url"}}],[11,"rev_for","","",77,{"inputs":[{"name":"self"},{"name":"path"},{"name":"gitreference"}],"output":{"name":"cargoresult"}}],[11,"checkout","","",77,{"inputs":[{"name":"self"},{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"db_at","","",77,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"copy_to","","",78,{"inputs":[{"name":"self"},{"name":"gitrevision"},{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"rev_for","","",78,{"inputs":[{"name":"self"},{"name":"gitreference"}],"output":{"name":"cargoresult"}}],[11,"to_short_id","","",78,{"inputs":[{"name":"self"},{"name":"gitrevision"}],"output":{"name":"cargoresult"}}],[11,"has_ref","","",78,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"new","cargo::sources","",79,{"inputs":[{"name":"sourceid"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"url","","",79,{"inputs":[{"name":"self"}],"output":{"name":"url"}}],[11,"read_packages","","",79,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"query","","",79,{"inputs":[{"name":"self"},{"name":"dependency"},{"name":"fnmut"}],"output":{"name":"cargoresult"}}],[11,"supports_checksums","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"requires_precise","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"source_id","","",79,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[11,"update","","",79,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"download","","",79,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[11,"fingerprint","","",79,{"inputs":[{"name":"self"},{"name":"package"}],"output":{"name":"cargoresult"}}],[0,"path","","",null,null],[3,"PathSource","cargo::sources::path","",null,null],[11,"new","","Invoked with an absolute path to a directory that contains a Cargo.toml.",80,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"pathsource"}}],[11,"new_recursive","","Creates a new source which is walked recursively to discover packages.",80,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"pathsource"}}],[11,"root_package","","",80,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"read_packages","","",80,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"list_files","","List all files relevant to building this package inside this source.",80,{"inputs":[{"name":"self"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"query","","",80,{"inputs":[{"name":"self"},{"name":"dependency"},{"name":"fnmut"}],"output":{"name":"cargoresult"}}],[11,"supports_checksums","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"requires_precise","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"source_id","","",80,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[11,"update","","",80,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"download","","",80,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[11,"fingerprint","","",80,{"inputs":[{"name":"self"},{"name":"package"}],"output":{"name":"cargoresult"}}],[0,"registry","cargo::sources","A `Source` for registry-based packages.",null,null],[3,"RegistrySource","cargo::sources::registry","",null,null],[3,"RegistryConfig","","",null,null],[12,"dl","","Download endpoint for all crates. This will be appended with `/<crate>/<version>/download` and then will be hit with an HTTP GET request to download the tarball for a crate.",81,null],[12,"api","","API endpoint for the registry. This is what's actually hit to perform operations like yanks, owner modifications, publish new crates, etc.",81,null],[7,"CRATES_IO","","",null,null],[8,"RegistryData","","",null,null],[10,"index_path","","",82,{"inputs":[{"name":"self"}],"output":{"name":"filesystem"}}],[10,"load","","",82,{"inputs":[{"name":"self"},{"name":"path"},{"name":"path"},{"name":"fnmut"}],"output":{"name":"cargoresult"}}],[10,"config","","",82,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[10,"update_index","","",82,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[10,"download","","",82,{"inputs":[{"name":"self"},{"name":"packageid"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"remote","","",83,{"inputs":[{"name":"sourceid"},{"name":"config"}],"output":{"name":"registrysource"}}],[11,"local","","",83,{"inputs":[{"name":"sourceid"},{"name":"path"},{"name":"config"}],"output":{"name":"registrysource"}}],[11,"config","","Decode the configuration stored within the registry.",83,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"query","","",83,{"inputs":[{"name":"self"},{"name":"dependency"},{"name":"fnmut"}],"output":{"name":"cargoresult"}}],[11,"supports_checksums","","",83,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"requires_precise","","",83,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"source_id","","",83,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[11,"update","","",83,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"download","","",83,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[11,"fingerprint","","",83,{"inputs":[{"name":"self"},{"name":"package"}],"output":{"name":"cargoresult"}}],[0,"replaced","cargo::sources","",null,null],[3,"ReplacedSource","cargo::sources::replaced","",null,null],[11,"new","","",84,{"inputs":[{"name":"sourceid"},{"name":"sourceid"},{"name":"box"}],"output":{"name":"replacedsource"}}],[11,"query","","",84,{"inputs":[{"name":"self"},{"name":"dependency"},{"name":"fnmut"}],"output":{"name":"cargoresult"}}],[11,"supports_checksums","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"requires_precise","","",84,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"source_id","","",84,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[11,"update","","",84,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"download","","",84,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[11,"fingerprint","","",84,{"inputs":[{"name":"self"},{"name":"package"}],"output":{"name":"cargoresult"}}],[11,"verify","","",84,{"inputs":[{"name":"self"},{"name":"packageid"}],"output":{"name":"cargoresult"}}],[0,"util","cargo","",null,null],[3,"DependencyQueue","cargo::util","",null,null],[3,"FileLock","","",null,null],[3,"Filesystem","","A \"filesystem\" is intended to be a globally shared, hence locked, resource in Cargo.",null,null],[3,"LazyCell","","",null,null],[3,"Rustc","","",null,null],[12,"path","","",85,null],[12,"wrapper","","",85,null],[12,"verbose_version","","",85,null],[12,"host","","",85,null],[3,"Sha256","","",null,null],[3,"GitRepo","","",null,null],[3,"HgRepo","","",null,null],[3,"PijulRepo","","",null,null],[3,"FossilRepo","","",null,null],[4,"Cfg","","",null,null],[13,"Name","","",86,null],[13,"KeyPair","","",86,null],[4,"CfgExpr","","",null,null],[13,"Not","","",87,null],[13,"All","","",87,null],[13,"Any","","",87,null],[13,"Value","","",87,null],[4,"Freshness","","Indication of the freshness of a package.",null,null],[13,"Fresh","","",88,null],[13,"Dirty","","",88,null],[5,"read2","","",null,{"inputs":[{"name":"childstdout"},{"name":"childstderr"},{"name":"fnmut"}],"output":{"name":"result"}}],[0,"config","","",null,null],[3,"Config","cargo::util::config","",null,null],[3,"Value","","",null,null],[12,"val","","",89,null],[12,"definition","","",89,null],[4,"Location","","",null,null],[13,"Project","","",90,null],[13,"Global","","",90,null],[4,"ConfigValue","","",null,null],[13,"Integer","","",91,null],[13,"String","","",91,null],[13,"List","","",91,null],[13,"Table","","",91,null],[13,"Boolean","","",91,null],[4,"Definition","","",null,null],[13,"Path","","",92,null],[13,"Environment","","",92,null],[5,"homedir","","",null,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[5,"save_credentials","","",null,{"inputs":[{"name":"config"},{"name":"string"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",93,{"inputs":[{"name":"shell"},{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"config"}}],[11,"default","","",93,{"inputs":[],"output":{"name":"cargoresult"}}],[11,"home","","",93,{"inputs":[{"name":"self"}],"output":{"name":"filesystem"}}],[11,"git_path","","",93,{"inputs":[{"name":"self"}],"output":{"name":"filesystem"}}],[11,"registry_index_path","","",93,{"inputs":[{"name":"self"}],"output":{"name":"filesystem"}}],[11,"registry_cache_path","","",93,{"inputs":[{"name":"self"}],"output":{"name":"filesystem"}}],[11,"registry_source_path","","",93,{"inputs":[{"name":"self"}],"output":{"name":"filesystem"}}],[11,"shell","","",93,{"inputs":[{"name":"self"}],"output":{"name":"refmut"}}],[11,"rustdoc","","",93,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"rustc","","",93,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"cargo_exe","","",93,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"values","","",93,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"set_values","","",93,{"inputs":[{"name":"self"},{"name":"hashmap"}],"output":{"name":"cargoresult"}}],[11,"cwd","","",93,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"target_dir","","",93,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"get_string","","",93,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_bool","","",93,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_path","","",93,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_path_and_args","","",93,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_list","","",93,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_list_or_split_string","","",93,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_table","","",93,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"get_i64","","",93,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"net_retry","","",93,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"expected","","",93,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"cv"}],"output":{"name":"cargoresult"}}],[11,"configure","","",93,null],[11,"cli_unstable","","",93,{"inputs":[{"name":"self"}],"output":{"name":"ref"}}],[11,"extra_verbose","","",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"network_allowed","","",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"lock_update_allowed","","",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"load_values","","",93,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"jobserver_from_env","","",93,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"http","","",93,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"location"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"location"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"configvalue"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"self"},{"name":"configvalue"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"configvalue"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",91,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"i64","","",91,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"string","","",91,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"table","","",91,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"list","","",91,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"boolean","","",91,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"desc","","",91,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"definition_path","","",91,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"root","","",92,{"inputs":[{"name":"self"},{"name":"config"}],"output":{"name":"path"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"errors","cargo::util","",null,null],[3,"CargoError","cargo::util::errors","The Error type.",null,null],[12,"0","","The kind of the error.",94,null],[3,"ProcessError","","",null,null],[12,"desc","","",95,null],[12,"exit","","",95,null],[12,"output","","",95,null],[3,"CargoTestError","","Error when testcases fail",null,null],[12,"test","","",96,null],[12,"desc","","",96,null],[12,"exit","","",96,null],[12,"causes","","",96,null],[3,"CliError","","",null,null],[12,"error","","",97,null],[12,"unknown","","",97,null],[12,"exit_code","","",97,null],[4,"CargoErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",98,null],[13,"CrateRegistry","","",98,null],[13,"ParseSemver","","",98,null],[13,"Semver","","",98,null],[13,"Ignore","","",98,null],[13,"Io","","",98,null],[13,"SerdeJson","","",98,null],[13,"TomlSer","","",98,null],[13,"TomlDe","","",98,null],[13,"ParseInt","","",98,null],[13,"ParseBool","","",98,null],[13,"Parse","","",98,null],[13,"Git","","",98,null],[13,"Curl","","",98,null],[13,"Internal","","",98,null],[13,"ProcessErrorKind","","",98,null],[13,"CargoTestErrorKind","","",98,null],[13,"HttpNot200","","",98,null],[4,"Test","","",null,null],[13,"Multiple","","",99,null],[13,"Doc","","",99,null],[13,"UnitTest","","",99,null],[5,"process_error","","",null,{"inputs":[{"name":"str"},{"name":"option"},{"name":"option"}],"output":{"name":"processerror"}}],[5,"internal","","",null,{"inputs":[{"name":"s"}],"output":{"name":"cargoerror"}}],[6,"CargoResult","","Convenient wrapper around `std::Result`.",null,null],[6,"CliResult","","",null,null],[8,"CargoResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",100,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",94,{"inputs":[{"name":"cargoerrorkind"},{"name":"state"}],"output":{"name":"cargoerror"}}],[11,"from_kind","","",94,null],[11,"with_chain","","",94,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",94,null],[11,"iter","","",94,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",94,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",94,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"extract_backtrace","","",94,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",94,{"inputs":[{"name":"cargoerrorkind"}],"output":{"name":"cargoerror"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",94,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"cargoerror"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",94,{"inputs":[{"name":"box"},{"name":"k"}],"output":{"name":"cargoerror"}}],[11,"kind","","Returns the kind of the error.",94,{"inputs":[{"name":"self"}],"output":{"name":"cargoerrorkind"}}],[11,"iter","","Iterates over the error chain.",94,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",94,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",94,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"cargoerror"}}],[11,"description","","",94,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",94,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",94,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"reqparseerror"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"semvererror"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"parseinterror"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"parseerror"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"cargoerrorkind"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",94,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",94,null],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",98,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",98,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",98,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",98,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",98,{"inputs":[{"name":"cargoerror"}],"output":{"name":"self"}}],[11,"into_internal","","",94,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",96,{"inputs":[{"name":"test"},{"name":"vec"}],"output":{"name":"self"}}],[11,"hint","","",96,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",97,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",97,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",97,{"inputs":[{"name":"cargoerror"},{"name":"i32"}],"output":{"name":"clierror"}}],[11,"code","","",97,{"inputs":[{"name":"i32"}],"output":{"name":"clierror"}}],[11,"from","","",97,{"inputs":[{"name":"cargoerror"}],"output":{"name":"clierror"}}],[0,"graph","cargo::util","",null,null],[3,"Graph","cargo::util::graph","",null,null],[6,"Nodes","","",null,null],[6,"Edges","","",null,null],[11,"new","","",101,{"inputs":[],"output":{"name":"graph"}}],[11,"add","","",101,null],[11,"link","","",101,{"inputs":[{"name":"self"},{"name":"n"},{"name":"n"}],"output":null}],[11,"get_nodes","","",101,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"edges","","",101,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[11,"sort","","",101,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"iter","","",101,{"inputs":[{"name":"self"}],"output":{"name":"nodes"}}],[11,"default","","",101,{"inputs":[],"output":{"name":"graph"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"graph"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"graph"}}],[0,"hex","cargo::util","",null,null],[5,"to_hex","cargo::util::hex","",null,{"inputs":[{"name":"u64"}],"output":{"name":"string"}}],[5,"hash_u64","","",null,{"inputs":[{"name":"h"}],"output":{"name":"u64"}}],[5,"short_hash","","",null,{"inputs":[{"name":"h"}],"output":{"name":"string"}}],[0,"important_paths","cargo::util","",null,null],[5,"find_project","cargo::util::important_paths","Iteratively search for `file` in `pwd` and its parents, returning the path of the directory.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[5,"find_project_manifest","","Iteratively search for `file` in `pwd` and its parents, returning the path to the file.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[5,"find_root_manifest_for_wd","","Find the root Cargo.toml",null,{"inputs":[{"name":"option"},{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"find_project_manifest_exact","","Return the path to the `file` in `pwd`, if it exists.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[0,"job","cargo::util","Job management (mostly for windows)",null,null],[5,"setup","cargo::util::job","",null,{"inputs":[],"output":{"name":"option"}}],[6,"Setup","","",null,null],[0,"lev_distance","cargo::util","",null,null],[5,"lev_distance","cargo::util::lev_distance","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[0,"machine_message","cargo::util","",null,null],[3,"FromCompiler","cargo::util::machine_message","",null,null],[12,"package_id","","",102,null],[12,"target","","",102,null],[12,"message","","",102,null],[3,"Artifact","","",null,null],[12,"package_id","","",103,null],[12,"target","","",103,null],[12,"profile","","",103,null],[12,"features","","",103,null],[12,"filenames","","",103,null],[12,"fresh","","",103,null],[3,"BuildScript","","",null,null],[12,"package_id","","",104,null],[12,"linked_libs","","",104,null],[12,"linked_paths","","",104,null],[12,"cfgs","","",104,null],[12,"env","","",104,null],[5,"emit","","",null,{"inputs":[{"name":"t"}],"output":null}],[8,"Message","","",null,null],[10,"reason","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"reason","","",102,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"reason","","",103,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"reason","","",104,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"network","cargo::util","",null,null],[5,"with_retry","cargo::util::network","Wrapper method for network call retry logic.",null,{"inputs":[{"name":"config"},{"name":"f"}],"output":{"name":"cargoresult"}}],[0,"paths","cargo::util","",null,null],[3,"PathAncestors","cargo::util::paths","",null,null],[5,"join_paths","","",null,null],[5,"dylib_path_envvar","","",null,{"inputs":[],"output":{"name":"str"}}],[5,"dylib_path","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"normalize_path","","",null,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[5,"without_prefix","","",null,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[5,"read","","",null,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"read_bytes","","",null,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"write","","",null,null],[5,"append","","",null,null],[5,"path2bytes","","",null,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"bytes2path","","",null,null],[5,"ancestors","","",null,{"inputs":[{"name":"path"}],"output":{"name":"pathancestors"}}],[11,"next","","",106,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"process_builder","cargo::util","",null,null],[3,"ProcessBuilder","cargo::util::process_builder","",null,null],[5,"process","","",null,{"inputs":[{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"processbuilder"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"program","","",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"arg","","",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"args","","",107,null],[11,"args_replace","","",107,null],[11,"cwd","","",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"env","","",107,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"env_remove","","",107,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"processbuilder"}}],[11,"get_program","","",107,{"inputs":[{"name":"self"}],"output":{"name":"osstring"}}],[11,"get_args","","",107,null],[11,"get_cwd","","",107,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_env","","",107,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_envs","","",107,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"inherit_jobserver","","",107,{"inputs":[{"name":"self"},{"name":"client"}],"output":{"name":"self"}}],[11,"exec","","",107,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"exec_replace","","",107,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"exec_with_output","","",107,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[11,"exec_with_streaming","","",107,{"inputs":[{"name":"self"},{"name":"fnmut"},{"name":"fnmut"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[11,"build_command","","",107,{"inputs":[{"name":"self"}],"output":{"name":"command"}}],[0,"profile","cargo::util","",null,null],[3,"Profiler","cargo::util::profile","",null,null],[5,"start","","",null,{"inputs":[{"name":"t"}],"output":{"name":"profiler"}}],[11,"drop","","",108,{"inputs":[{"name":"self"}],"output":null}],[0,"to_semver","cargo::util","",null,null],[8,"ToSemver","cargo::util::to_semver","",null,null],[10,"to_semver","","",109,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"to_url","cargo::util","",null,null],[8,"ToUrl","cargo::util::to_url","",null,null],[10,"to_url","","",110,{"inputs":[{"name":"self"}],"output":{"name":"cargoresult"}}],[0,"toml","cargo::util","",null,null],[3,"DetailedTomlDependency","cargo::util::toml","",null,null],[3,"TomlManifest","","",null,null],[3,"TomlProfiles","","",null,null],[3,"TomlOptLevel","","",null,null],[3,"TomlProfile","","",null,null],[3,"TomlProject","","",null,null],[3,"TomlWorkspace","","",null,null],[4,"TomlDependency","","",null,null],[13,"Simple","","",111,null],[13,"Detailed","","",111,null],[4,"U32OrBool","","",null,null],[13,"U32","","",112,null],[13,"Bool","","",112,null],[4,"StringOrBool","","",null,null],[13,"String","","",113,null],[13,"Bool","","",113,null],[5,"read_manifest","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"parse","","",null,{"inputs":[{"name":"str"},{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize","","",111,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"detailedtomldependency"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",114,{"inputs":[],"output":{"name":"detailedtomldependency"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"tomlprofiles"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",116,{"inputs":[],"output":{"name":"tomlprofiles"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"tomloptlevel"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize","","",117,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"serialize","","",117,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"u32orbool"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize","","",112,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"tomlprofile"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",118,{"inputs":[],"output":{"name":"tomlprofile"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"stringorbool"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deserialize","","",113,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"tomlproject"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_package_id","","",119,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"prepare_for_publish","","",115,{"inputs":[{"name":"self"}],"output":{"name":"tomlmanifest"}}],[11,"clone","cargo::util","",86,{"inputs":[{"name":"self"}],"output":{"name":"cfg"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"cfg"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"cfg"}],"output":{"name":"bool"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"cfgexpr"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"cfgexpr"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"cfgexpr"}],"output":{"name":"bool"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",86,{"inputs":[{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matches","","",87,null],[11,"from_str","","",87,{"inputs":[{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"freshness"}],"output":{"name":"bool"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"freshness"}}],[11,"combine","","",88,{"inputs":[{"name":"self"},{"name":"freshness"}],"output":{"name":"freshness"}}],[11,"default","","",121,{"inputs":[],"output":{"name":"dependencyqueue"}}],[11,"new","","Creates a new dependency queue with 0 packages.",121,{"inputs":[],"output":{"name":"dependencyqueue"}}],[11,"queue","","Adds a new package to this dependency queue.",121,null],[11,"dequeue","","Dequeues a package that is ready to be built.",121,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_empty","","Returns whether there are remaining packages to be built.",121,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"len","","Returns the number of remaining packages to be built.",121,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"finish","","Indicate that a package has been built.",121,{"inputs":[{"name":"self"},{"name":"k"},{"name":"freshness"}],"output":null}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Run the compiler at `path` to learn various pieces of information about it.",85,{"inputs":[{"name":"pathbuf"},{"name":"option"}],"output":{"name":"cargoresult"}}],[11,"process","","",85,{"inputs":[{"name":"self"}],"output":{"name":"processbuilder"}}],[11,"new","","",122,{"inputs":[],"output":{"name":"sha256"}}],[11,"update","","",122,null],[11,"finish","","",122,null],[11,"init","","",123,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"discover","","",123,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"result"}}],[11,"init","","",124,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"discover","","",124,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"init","","",125,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"init","","",126,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new empty lazy cell.",127,{"inputs":[],"output":{"name":"lazycell"}}],[11,"fill","","Put a value into this cell.",127,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",127,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"borrow_mut","","Same as `borrow`, but the mutable version",127,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",127,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_or_try_init","","Borrows the contents of this lazy cell, initializing it if necessary.",127,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"file","","Returns the underlying file handle of this lock.",128,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"path","","Returns the underlying path that this lock points to.",128,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"parent","","Returns the parent path containing this file",128,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"remove_siblings","","Removes all sibling files to this locked file.",128,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",128,null],[11,"seek","","",128,{"inputs":[{"name":"self"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"write","","",128,null],[11,"flush","","",128,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"drop","","",128,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"filesystem"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new filesystem to be rooted at the given path.",129,{"inputs":[{"name":"pathbuf"}],"output":{"name":"filesystem"}}],[11,"join","","Like `Path::join`, creates a new filesystem rooted at this filesystem joined with the given path.",129,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"filesystem"}}],[11,"push","","Like `Path::push`, pushes a new path component onto this filesystem.",129,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"into_path_unlocked","","Consumes this filesystem and returns the underlying `PathBuf`.",129,{"inputs":[{"name":"self"}],"output":{"name":"pathbuf"}}],[11,"create_dir","","Creates the directory pointed to by this filesystem.",129,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"display","","Returns an adaptor that can be used to print the path of this filesystem.",129,{"inputs":[{"name":"self"}],"output":{"name":"display"}}],[11,"open_rw","","Opens exclusive access to a file, returning the locked version of a file.",129,{"inputs":[{"name":"self"},{"name":"p"},{"name":"config"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"open_ro","","Opens shared access to a file, returning the locked version of a file.",129,{"inputs":[{"name":"self"},{"name":"p"},{"name":"config"},{"name":"str"}],"output":{"name":"cargoresult"}}],[17,"CARGO_ENV","cargo","",null,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"init","cargo::ops","Called after a rustc process invocation is prepared up-front for a given unit of work (may still be modified for runtime-known dependencies, when the work is actually executed).",73,{"inputs":[{"name":"self"},{"name":"context"},{"name":"unit"}],"output":null}],[11,"exec","","In case of an `Err`, Cargo will not continue with the build process for this package.",73,{"inputs":[{"name":"self"},{"name":"processbuilder"},{"name":"packageid"},{"name":"target"}],"output":{"name":"cargoresult"}}],[11,"exec_json","","",73,{"inputs":[{"name":"self"},{"name":"processbuilder"},{"name":"packageid"},{"name":"target"},{"name":"fnmut"},{"name":"fnmut"}],"output":{"name":"cargoresult"}}],[11,"force_rebuild","","Queried when queuing each unit of work. If it returns true, then the unit will always be rebuilt, independent of whether it needs to be.",73,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"bool"}}]],"paths":[[3,"CommitInfo"],[3,"CfgInfo"],[3,"VersionInfo"],[3,"CliUnstable"],[4,"WorkspaceConfig"],[4,"GitReference"],[8,"Source"],[3,"SourceId"],[3,"SourceIdToUrl"],[3,"PrettyRef"],[3,"SourceMap"],[3,"SourcesMut"],[3,"Package"],[3,"PackageSet"],[3,"PackageId"],[3,"PackageIdStableHash"],[4,"Platform"],[4,"Kind"],[3,"Dependency"],[3,"DelayedWarning"],[3,"ManifestMetadata"],[3,"Profile"],[3,"Profiles"],[4,"EitherManifest"],[4,"LibKind"],[4,"TargetKind"],[3,"Manifest"],[3,"VirtualManifest"],[3,"Target"],[3,"WorkspaceResolve"],[4,"Method"],[3,"EncodableResolve"],[3,"EncodableDependency"],[3,"EncodablePackageId"],[3,"Resolve"],[3,"Deps"],[3,"DepsNotReplaced"],[3,"Summary"],[4,"Verbosity"],[4,"ColorChoice"],[3,"Shell"],[8,"Registry"],[3,"PackageRegistry"],[3,"PackageIdSpec"],[3,"Workspace"],[3,"Members"],[3,"Features"],[3,"Feature"],[3,"CleanOptions"],[3,"CompileOptions"],[3,"Compilation"],[3,"Unit"],[3,"Context"],[3,"BuildOutput"],[3,"BuildConfig"],[3,"TargetConfig"],[3,"NewOptions"],[3,"DocOptions"],[3,"UpdateOptions"],[3,"TestOptions"],[3,"PackageOpts"],[3,"RegistryConfig"],[3,"OwnersOptions"],[3,"PublishOpts"],[3,"OutputMetadataOptions"],[4,"CompileFilter"],[4,"CompileMode"],[4,"FilterRule"],[4,"MessageFormat"],[4,"Packages"],[4,"Kind"],[4,"VersionControl"],[3,"DefaultExecutor"],[8,"Executor"],[3,"SourceConfigMap"],[3,"DirectorySource"],[3,"GitRevision"],[3,"GitRemote"],[3,"GitDatabase"],[3,"GitSource"],[3,"PathSource"],[3,"RegistryConfig"],[8,"RegistryData"],[3,"RegistrySource"],[3,"ReplacedSource"],[3,"Rustc"],[4,"Cfg"],[4,"CfgExpr"],[4,"Freshness"],[3,"Value"],[4,"Location"],[4,"ConfigValue"],[4,"Definition"],[3,"Config"],[3,"CargoError"],[3,"ProcessError"],[3,"CargoTestError"],[3,"CliError"],[4,"CargoErrorKind"],[4,"Test"],[8,"CargoResultExt"],[3,"Graph"],[3,"FromCompiler"],[3,"Artifact"],[3,"BuildScript"],[8,"Message"],[3,"PathAncestors"],[3,"ProcessBuilder"],[3,"Profiler"],[8,"ToSemver"],[8,"ToUrl"],[4,"TomlDependency"],[4,"U32OrBool"],[4,"StringOrBool"],[3,"DetailedTomlDependency"],[3,"TomlManifest"],[3,"TomlProfiles"],[3,"TomlOptLevel"],[3,"TomlProfile"],[3,"TomlProject"],[3,"TomlWorkspace"],[3,"DependencyQueue"],[3,"Sha256"],[3,"GitRepo"],[3,"HgRepo"],[3,"PijulRepo"],[3,"FossilRepo"],[3,"LazyCell"],[3,"FileLock"],[3,"Filesystem"]]};
initSearch(searchIndex);
